/*
description
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

示例:

输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/unique-binary-search-trees
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/
class Solution {
public:
    int numTrees(int n) {
        vector<int> dp(n+1,0);
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=n;i++){
            for(int j=0;j<i;j++)
                dp[i]+=dp[j]*dp[i-j-1];
        }
        return dp[n];
    }
};

引入卡塔兰数
n = 0 时，记c(0) = 1;代表空树也算一种二叉树
n = 1 时可以看作是左子树的个数乘以右子树的个数，即1*1
n = 2 时可以看作c(1)*c(0) + c(0)*c(1) ; c(1)*c(0)代表2为根 则左子树可以有一个数字 右子树为空 c(0)*c(1)代表1为跟，左子树为空，右子树可以为2（一个数字）
n = 3 时可以看作c(0)*c(2) + c(1)*c(1) +c(2)*c(0) 
因此c(0) = 1; c_{n+1} = sum_{i=0}^{n}{c(i)c(n-i)}

也可以写通项公式
